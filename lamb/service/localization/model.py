__author__ = 'KoNEW'
# -*- coding: utf-8 -*-

from sqlalchemy import Column
from sqlalchemy.dialects.mysql import BIGINT, TEXT
from lamb.db import DeclarativeBase
from lamb.db.mixins import TableConfigMixin
from lamb.json.mixins import ResponseEncodableMixin


class LambLocalization(DeclarativeBase, TableConfigMixin, ResponseEncodableMixin):
    """ Class provide database model for store localized strings data

    At this moment class supports only two localizations: russian and english.

    Note:

        Use table named `nm_service_localization` for store records.

    Attributes:

        localization_id (long): Database id of record, do not set directly,
        it is generated by auto_increment in database.
        value_rus (Optional[str]): Localized russian value, may be null
        value_eng (Optional[str]): Localized english value, may be null
    """
    # columns
    localization_id = Column(BIGINT(unsigned=True), primary_key=True, nullable=False, autoincrement=True)
    value_rus = Column(TEXT())
    value_eng = Column(TEXT())

    # meta information
    # direct change because should have another name
    __tablename__ = 'lamb.service_localization'

    # methods
    def __init__(self, value_rus=None, value_eng=None):
        self.value_rus = value_rus
        self.value_eng = value_eng
